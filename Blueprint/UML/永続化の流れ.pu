@startuml
title 永続化の流れ
actor User
participant View
participant Presenter
participant Model

activate Model
Presenter -> Presenter: Presenterを生成
activate Presenter
View -> View: Viewを生成
activate View
User -> View: スケジュール入力

View -> Presenter: スケジュール情報
note right of View: Presenterに各情報を渡す\nsaveSchedule(\nString title,\n String description,\n Calendar startAtSchedule,\n Calendar endAtSchedule,\n int groupId,\n int paymentId)
Presenter -> Model: スケジュール情報(オブジェクト)+コールバック
note right of Presenter: setSchedule(Schedule, saveScheduleCallback)
Model -> Presenter: 
note right of Presenter: Scheduleとコールバックオブジェクトを送ってすぐ戻る
Model --> Model: SQLiteクエリを実行
note right of Model: Roomにて永続化
Model --> Model: コールバックを実行
note left of Model: public void onScheduleSaved(){\n// 保存完了時に入力画面を閉じる\nmInputFormView.finishInput();\n}
Model -> View: コールバック実行(入力画面を閉じる)
View -> View: 入力画面を終了
View -> User: カレンダー画面に遷移
@enduml